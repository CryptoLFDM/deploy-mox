---

- name: Create Group
  become: true
  group:
    name: "{{ user_group }}"
    state: present
  when: user_group is not none
  notify: user_changed_on_system

- name: Create User
  become: true
  user:
    name: "{{ user_name }}"
    group: "{{ user_group }}"
    home: "{{ user_home | default(omit) }}"
    shell: "{{ user_shell }}"
    comment: "{{ user_comment }}"
    append: true
    groups: "{{ user_groups }}"
    expires: "{{ user_expires }}"
  when: user_name is not none
  notify: user_changed_on_system

- name: Harvest maximum number of day between restart
  become: true
  shell: |
    set -o pipefail
    export LANG=en_US.UTF-8
    chage -l {{ user_name | quote }} | grep "^Maximum number of days between password change" | sed 's/.*: //'
  when: user_name is not none
  register: user_current_max_pwd_age
  changed_when: false

- name: Set to unlimited if not the case
  become: true
  command: chage -M {{ user_password_expires | default(-1) }} {{ user_name }}
  when:
    - user_name is not none
    - user_current_max_pwd_age.stdout|string != user_password_expires|default(-1)|string
    - not user_current_max_pwd_age.skipped|default('false')|bool

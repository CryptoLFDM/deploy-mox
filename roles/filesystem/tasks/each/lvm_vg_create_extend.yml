---

# Création ou extension d'un VG sur un ou plusieurs pv.
#
# Les disques peuvent changer de nom (reboot avec virtualisation RHV), donc
# on ne peut pas trop s'appuyer sur l'information fournie lors de l'appel du
# rôle: cette liste des PV pour un VG correspond à l'état "initial".
#
# Contournement:
# on compare le nombre de vg demandés avec le nombre actuellement affecté à un VG.
# La creation/extension de vg sera faite uniquement si le nb demandé est
# inférieur au nombre courant.
# En général, la gestion des VG est faite assez tôt dans les playbook, donc on
# est pas trop sensible aux nom des PV à ce stade.
#
# variable d'input:
# - le VG sur lequel travailler: lvm_vg_item
# - les infos pvs mode json    : filesystem_pvs_raw

- name: "(loop) LVM vg | travail sur le VolumeGroup '{{ lvm_vg_item.vg }}'"
  set_fact:
    query_pv_list: "report[0].pv[?vg_name=='{{ lvm_vg_item.vg }}'].pv_name"

- name: (loop) Liste actuelle de ses pvs
  set_fact:
    filesystem_pvlist: "{{ filesystem_pvs_raw.stdout | from_json | json_query(query_pv_list) }}"

- name: (loop) création ou extension du VG
  become: true
  lvg:
    vg:  "{{ lvm_vg_item.vg }}"
    pvs: "{{ lvm_vg_item.pvs }}"
  when: ( filesystem_pvlist | length ) < ( lvm_vg_item.pvs.split(',') | length )


#---------------------------------------------------
# Frontend settings
#---------------------------------------------------
frontend webhook_truesight_recette
# If no SNI is provided by the client or if the SSL library does not support
# TLS extensions, or if the client provides an SNI hostname which does not
# match any certificate, then the first loaded certificate will be presented.
# => L'ordre des certificats est important
   mode http
   bind *:{{ haproxy_webhook_truesight.recette.port }} ssl crt {{ ansible_host }}.pem ca-file {{ idatha_autority_file }} crl-file crl-bundle.pem verify optional

   acl method_valid method DELETE GET HEAD POST PUT
   http-request deny if ! method_valid

   default_backend backend_webhook_truesight_recette


{% if env == 'prod_zhb' %}
frontend webhook_truesight_prod
# If no SNI is provided by the client or if the SSL library does not support
# TLS extensions, or if the client provides an SNI hostname which does not
# match any certificate, then the first loaded certificate will be presented.
# => L'ordre des certificats est important
   mode http
   bind *:{{ haproxy_webhook_truesight.prod.port }} ssl crt {{ ansible_host }}.pem ca-file {{ idatha_autority_file }} crl-file crl-bundle.pem verify optional

   acl method_valid method DELETE GET HEAD POST PUT
   http-request deny if ! method_valid

   default_backend backend_webhook_truesight_prod

{% endif %}

#---------------------------------------------------
# Backend settings
#---------------------------------------------------
backend backend_webhook_truesight_recette
   mode http
   default-server check ssl force-tlsv12 verify required ca-file {{ idatha_autority_file }} crl-file crl-bundle.pem fall 2 rise 2
   http-request set-path {{ haproxy_webhook_truesight_apache_path }}
{% for apache_host in haproxy_webhook_truesight.recette.hosts %}
   server srv_ftp_truesight_{{ "%02d"|format(loop.index) }} {{ apache_host }}:{{ haproxy_webhook_truesight_apache_port }}
{% endfor %}


{% if env == 'prod_zhb' %}
backend backend_webhook_truesight_prod
   mode http
   default-server check ssl force-tlsv12 verify required ca-file {{ idatha_autority_file }} crl-file crl-bundle.pem fall 2 rise 2
   http-request set-path {{ haproxy_webhook_truesight_apache_path }}
{% for apache_host in haproxy_webhook_truesight.prod.hosts %}
   server srv_ftp_truesight_{{ "%02d"|format(loop.index) }} {{ apache_host }}:{{ haproxy_webhook_truesight_apache_port }}
{% endfor %}

{% endif %}

{%- macro grafana_user(cluser_name, isC3) -%}
{%- if isC3 -%}
{%- set privacy = 'c3' -%}
{%- else -%}
{%- set privacy = 'c1' -%}
{%- endif %}
{%- set cluster = cluser_name.split('_') -%}
grafana_{{ privacy }}_{{ cluster[0] }}_2022
{%- endmacro -%}
# list of datasources to insert/update depending
# what's available in the database
datasources:
{% if grafana_datasources %}
{% for id,cluster in grafana_datasources.items() %}
{% for datasource in cluster.datasources %}
  - name: "{{ datasource.name }}"
    type: elasticsearch
    access: proxy
    url: "{{ cluster.url }}"
    basicAuth: true
    basicAuthUser: {{ grafana_user(id, datasource.get('c3')) }}
    database: "{{ datasource.index }}"
    orgId: {% if datasource.get('c3') %}2{% else %}1{% endif +%}
    jsonData:
      interval: "{{ datasource.get('interval', '') }}"
      timeInterval: "{{ datasource.group_by_time }}"
{% if datasource.timefield is defined %}
      timeField: "{{ datasource.timefield }}"
{% else %}
      timeField: "@timestamp_second"
{% endif %}
      esVersion: 70
      maxConcurrentShardRequests: {{ datasource.get('max_concurrent_shard_requests', cluster.get('max_concurrent_shard_requests', 5)) }}
      tlsAuth: true
      tlsAuthWithCACert: true
    secureJsonData:
      basicAuthPassword: "{% if datasource.get('c3') %}{{ cluster.pass_c3 }}{% else %}{{ cluster.pass }}{% endif %}"
      tlsCACert: "{{ '$__file{' ~ grafana_tls_ca_location ~ '}' }}"
      tlsClientCert: "{{ '$__file{' ~ grafana_tls_client_cert_location ~ '}' }}"
      tlsClientKey: "{{ '$__file{' ~ grafana_tls_client_key_location ~ '}' }}"
    editable: true

{% endfor %}
{% endfor %}
{% endif %}
